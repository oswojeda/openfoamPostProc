/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1606+                                |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0/unShaded";
    object      wallHeatFlux;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 0 -3 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    topWall
    {
        type            calculated;
        value           uniform 0;
    }
    leftWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
120
(
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
175200
)
;
    }
    rightWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
60
(
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
-707999.43
)
;
    }
    bottomWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
240
(
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
800
)
;
    }
    defaultFaces
    {
        type            empty;
    }
    unShaded_to_Shaded
    {
        type            calculated;
        value           nonuniform List<scalar> 
132
(
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
-717599.43
)
;
    }
}


// ************************************************************************* //
